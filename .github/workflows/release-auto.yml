name: Vueless Update

on:
  repository_dispatch:
    # triggered from `vueless` or `@vueless/storybook` repos
    types: [vueless-release, vueless-storybook-release]

permissions: write-all

jobs:
  vueless-update:
    name: "Auto-Release: ${{ github.event.client_payload.release_type }}"
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm install vueless@latest
      - run: npm install @vueless/storybook@latest
      - run: rm -rf .storybook
      - run: npx @vueless/storybook init
      - run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update vueless pakcages to latest [skip ci]"
            git push origin ${{ github.ref_name }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-beta:
    name: 'Update Beta'
    needs: vueless-update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git fetch origin beta
          git checkout beta
          git merge origin/main --no-edit -m "Merge main into beta [skip ci]" || echo "Merge conflict, needs manual resolution"
          git push origin beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
